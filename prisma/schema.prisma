generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

// Usuario: puede ser user o admin, según su rol tiene unas u otras opciones disponibles

enum rol {
  USER
  ADMIN
}

model usuario {
  id       String @id @default(cuid())
  nombre   String @unique
  rol      rol    @default(USER)
  password String
}

// Lugar: punto del mapa categorizado por grupos con colores

model grupo {
  id       String  @id @default(cuid())
  nombre   String
  colorhex String
  lugar    lugar[]
}

model lugar {
  id       String    @id @default(cuid())
  nombre   String
  lat      Float
  lon      Float
  grupo_id String
  grupo    grupo     @relation(fields: [grupo_id], references: [id])
  item     soporte[]

  @@unique([lat, lon])
}

// Soporte: medio por el cuál se distribuye la publicidad
// Tipo: describe el soporte: pantalla vertical, pantalla horizontal, videowall, valla, mural
// Espacio: hueco en el que se puede poner publicidad de los clientes: está ocupado el hueco? quién lo ocupa? hasta cuándo? desde cuándo?

enum categoria {
  DIGITAL
  CONVENCIONAL
}

model tipo {
  id        String    @id @default(cuid())
  nombre    String
  categoria categoria
  item      soporte[]
}

model espacio {
  id             String    @id @default(cuid())
  disponibilidad Boolean
  cliente        String?
  fecha_inicio   DateTime?
  fecha_fin      DateTime?
  soporte        soporte[]
}

model soporte {
  id         String  @id @default(cuid())
  cantidad   Int
  espacio_id String
  espacio    espacio @relation(fields: [espacio_id], references: [id])
  tipo_id    String
  tipo       tipo    @relation(fields: [tipo_id], references: [id])
  lugar_id   String
  lugar      lugar   @relation(fields: [lugar_id], references: [id])
}
